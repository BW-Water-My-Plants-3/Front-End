{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ben\\\\web30git\\\\build-week\\\\Front-End\\\\water-my-plants\\\\src\\\\components\\\\Signup.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nconst formSchema = Yup.object().shape({\n  userName: Yup.string().required('Please enter your name'),\n  phone: Yup.string().required('Please enter your phone number').length(10, 'Please enter a VALID phone number in the following format 1234567890'),\n  password: Yup.string().required('Please create a password').min(6, \"Your password must be 6 characters long\")\n});\n\nconst Signup = props => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    phoneNumber: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({\n    username: \"\",\n    phoneNumber: \"\",\n    password: \"\"\n  });\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [post, setPost] = useState([]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    formSchema.isValid(formState).then(valid => {\n      setButtonDisabled(!valid);\n    });\n  }, [formState]);\n\n  const validateChange = event => {\n    Yup.reach(formSchema, event.target.name).validate(event.target.value).then(valid => {\n      setErrors({ ...errors,\n        [event.target.name]: \"\"\n      });\n    }).catch(err => {\n      setErrors({ ...errors,\n        [event.target.name]: err.errors[0]\n      });\n    });\n  };\n\n  const inputChange = event => {\n    event.persist();\n    const newFormData = { ...formState,\n      [event.target.name]: event.target.type === \"checkbox\" ? event.target.checked : event.target.value\n    };\n    validateChange(event);\n    setFormState(newFormData);\n  };\n\n  const formSubmit = event => {\n    event.preventDefault();\n    axios.post(\"https://h2omyplants.herokuapp.com/api/signup\", formState).then(res => {\n      setPost(res.data);\n      console.log(\"success\", post);\n      setUsers([...users, res.data]);\n      setFormState({\n        name: \"\",\n        phone: \"\",\n        password: \"\"\n      });\n    }).catch(err => {\n      console.log(err.res);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Name\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username\",\n    type: \"text\",\n    name: \"username\",\n    value: formState.username,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), errors.username.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 48\n    }\n  }, errors.username) : null), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"phoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"phoneNumber\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"phoneNumber\",\n    type: \"phoneNumber\",\n    name: \"phoneNumber\",\n    value: formState.phoneNumber,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), errors.phoneNumber.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 51\n    }\n  }, \" \", errors.phoneNumber) : null), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Role\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Password\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    name: \"password\",\n    value: formState.password,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), errors.password.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 48\n    }\n  }, errors.password) : null), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Users\"), users.map(element => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, \"Name: \", element.username, \" Email: \", element.email);\n  })));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/Ben/web30git/build-week/Front-End/water-my-plants/src/components/Signup.js"],"names":["React","useState","useEffect","Yup","axios","formSchema","object","shape","userName","string","required","phone","length","password","min","Signup","props","formState","setFormState","username","phoneNumber","errors","setErrors","buttonDisabled","setButtonDisabled","post","setPost","users","setUsers","isValid","then","valid","validateChange","event","reach","target","name","validate","value","catch","err","inputChange","persist","newFormData","type","checked","formSubmit","preventDefault","res","data","console","log","map","element","email"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\"\r\n\r\nconst formSchema = Yup.object().shape({\r\nuserName: \r\n    Yup\r\n    .string()\r\n    .required('Please enter your name'),\r\n\r\n    phone: \r\n    Yup\r\n    .string()\r\n    .required('Please enter your phone number')\r\n    .length(10,'Please enter a VALID phone number in the following format 1234567890'),\r\n\r\n    password: \r\n    Yup\r\n    .string()\r\n    \r\n    .required('Please create a password')\r\n    .min(6, \"Your password must be 6 characters long\")\r\n    \r\n})\r\n\r\nconst Signup = props =>{\r\n\r\n    const [formState, setFormState] = useState({\r\n        username: \"\",\r\n        phoneNumber: \"\",\r\n        password: \"\"\r\n        \r\n    })\r\n   \r\n    const [errors, setErrors] = useState({\r\n        username: \"\",\r\n        phoneNumber: \"\",\r\n        password: \"\"\r\n        \r\n    })\r\n  \r\n    const [buttonDisabled, setButtonDisabled] = useState(true);\r\n\r\n    \r\n    const [post, setPost] = useState([]);\r\n    const [users, setUsers] = useState ([]);\r\n\r\n    useEffect(() => {\r\n        formSchema.isValid(formState).then(valid => {\r\n            setButtonDisabled(!valid);\r\n        });\r\n    }, [formState]);\r\n\r\n    const validateChange = event => {\r\n        Yup.reach(formSchema, event.target.name)\r\n            .validate(event.target.value)\r\n            .then(valid => {\r\n                setErrors({\r\n                    ...errors,\r\n                    [event.target.name]: \"\"\r\n                });\r\n            })\r\n            .catch(err => {\r\n                setErrors({\r\n                    ...errors,\r\n                    [event.target.name]: err.errors[0]\r\n                });\r\n            })\r\n    };\r\n\r\n    const inputChange = event => {\r\n        event.persist();\r\n        const newFormData = {\r\n            ...formState,\r\n            [event.target.name]:\r\n                event.target.type === \"checkbox\" ? event.target.checked : event.target.value\r\n        };\r\n        validateChange(event);\r\n        setFormState(newFormData);\r\n    };\r\n\r\n    const formSubmit = event => {\r\n        event.preventDefault();\r\n        axios.post(\"https://h2omyplants.herokuapp.com/api/signup\", formState)\r\n            .then(res => {\r\n                setPost(res.data);\r\n                console.log(\"success\", post);\r\n                setUsers([...users, res.data])\r\n                setFormState({\r\n                    name: \"\",\r\n                    phone: \"\",\r\n                    password: \"\",\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err.res);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div id=\"form\">\r\n\r\n            <form onSubmit={formSubmit}>\r\n                <label htmlFor=\"username\">\r\n                    Name\r\n                <input id=\"username\" type=\"text\" name=\"username\" value={formState.username} onChange={inputChange} />\r\n                {errors.username.length > 0 ? (<p>{errors.username}</p>):null}\r\n                </label>\r\n                <label htmlFor=\"phoneNumber\">\r\n                    phoneNumber\r\n                <input id=\"phoneNumber\" type=\"phoneNumber\" name=\"phoneNumber\" value={formState.phoneNumber} onChange={inputChange} />\r\n                {errors.phoneNumber.length > 0 ? (<p className=\"error\"> {errors.phoneNumber}</p>) : null}\r\n                </label>\r\n                <label htmlFor=\"role\">\r\n                    Role\r\n                </label>\r\n                <label htmlFor=\"password\">\r\n                    Password\r\n                <input id=\"password\" type=\"password\" name=\"password\" value={formState.password} onChange={inputChange} />\r\n                {errors.password.length > 0 ? (<p>{errors.password}</p>):null}\r\n                </label>\r\n                \r\n                <button disabled={buttonDisabled}>Submit</button>\r\n            </form>\r\n            <div>\r\n                <h1>Users</h1>\r\n                {users.map(element => {\r\n                    return (\r\n                        <div>Name: {element.username} Email: {element.email}</div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Signup"]},"metadata":{},"sourceType":"module"}